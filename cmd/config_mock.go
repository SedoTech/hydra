// Code generated by MockGen. DO NOT EDIT.
// Source: config.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigReader is a mock of ConfigReader interface
type MockConfigReader struct {
	ctrl     *gomock.Controller
	recorder *MockConfigReaderMockRecorder
}

// MockConfigReaderMockRecorder is the mock recorder for MockConfigReader
type MockConfigReaderMockRecorder struct {
	mock *MockConfigReader
}

// NewMockConfigReader creates a new mock instance
func NewMockConfigReader(ctrl *gomock.Controller) *MockConfigReader {
	mock := &MockConfigReader{ctrl: ctrl}
	mock.recorder = &MockConfigReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigReader) EXPECT() *MockConfigReaderMockRecorder {
	return m.recorder
}

// getConfig mocks base method
func (m *MockConfigReader) getConfig(directory string) Config {
	ret := m.ctrl.Call(m, "getConfig", directory)
	ret0, _ := ret[0].(Config)
	return ret0
}

// getConfig indicates an expected call of getConfig
func (mr *MockConfigReaderMockRecorder) getConfig(directory interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getConfig", reflect.TypeOf((*MockConfigReader)(nil).getConfig), directory)
}

// readConfig mocks base method
func (m *MockConfigReader) readConfig(path string) ([]byte, error) {
	ret := m.ctrl.Call(m, "readConfig", path)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// readConfig indicates an expected call of readConfig
func (mr *MockConfigReaderMockRecorder) readConfig(path interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "readConfig", reflect.TypeOf((*MockConfigReader)(nil).readConfig), path)
}

// parseConfig mocks base method
func (m *MockConfigReader) parseConfig(data []byte) Config {
	ret := m.ctrl.Call(m, "parseConfig", data)
	ret0, _ := ret[0].(Config)
	return ret0
}

// parseConfig indicates an expected call of parseConfig
func (mr *MockConfigReaderMockRecorder) parseConfig(data interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "parseConfig", reflect.TypeOf((*MockConfigReader)(nil).parseConfig), data)
}
